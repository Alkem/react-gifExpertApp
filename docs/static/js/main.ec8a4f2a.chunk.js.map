{"version":3,"sources":["components/AddCategory.js","components/GifImage.js","helpers/Request.js","hooks/useAxiosGifs.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","handlerAdd","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","GifImage","title","url","className","src","alt","GetRequest","params","a","axios","get","response","PostRequest","data","post","propTypes","PropTypes","string","isRequired","GifGrid","category","loading","state","setState","useEffect","api_key","q","limit","then","images","map","img","id","downsized_medium","catch","err","console","log","useAxiosGifs","defaultProps","GifExpertApp","categories","setCategories","element","trim","length","cags","ReactDOM","render","document","querySelector"],"mappings":"uPAkCeA,EA/BK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACFN,EAAWE,GACXC,EAAc,KAMd,SACE,uBACMI,KAAK,OACLC,MAASN,EACTO,SAjBU,SAACJ,GACnBF,EAAcE,EAAEK,OAAOF,a,QCKhBG,G,MAVE,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAErB,OACI,sBAAKC,UAAY,2CAAjB,UACI,4BAAIF,IACJ,qBAAKG,IAAKF,EAAKG,IAAKJ,S,gECArBK,EAAU,uCAAG,WAAOJ,EAAIK,GAAX,eAAAC,EAAA,+EAEWC,IAAMC,IAAIR,EAAI,CAACK,WAF1B,cAENI,EAFM,yBAGLA,GAHK,wHAAH,wDASXC,EAAW,uCAAG,WAAOV,EAAIK,EAAOM,GAAlB,eAAAL,EAAA,+EAESC,IAAMK,KAAKZ,EAAI,CAACK,SAAOM,SAFhC,cAERF,EAFQ,yBAGPA,GAHO,wHAAH,0DAUnBL,EAAWS,UAAY,CACrBb,IAAIc,IAAUC,OAAOC,YAGvBN,EAAYG,UAAY,CACtBb,IAAIc,IAAUC,OAAOC,YC7BzB,ICMMC,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEd,EDLwB,SAACA,GAC1B,MAA0B9B,mBAAS,CAClCuB,KAAK,GACLQ,SAAQ,IAFT,mBAAOC,EAAP,KAAcC,EAAd,KAkCA,OA5BAC,qBAAU,WAUTlB,EApBe,uCAaA,CACXmB,QAbO,mCAcPC,EAAEN,EACFO,MAAO,KAKVC,MAAK,SAAAjB,GACA,IAAMkB,EAASlB,EAASE,KAAKA,KAAKiB,KAAI,SAAAC,GAAO,IAAD,EACtC,MAAO,CACHC,GAAKD,EAAIC,GACT/B,MAAQ8B,EAAI9B,MACZC,IAAG,UAAE6B,EAAIF,cAAN,aAAE,EAAYI,iBAAiB/B,QAG1CqB,EAAS,CACLV,KAAMgB,EACNR,SAAS,OAEda,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAClC,CAACf,IAIOE,EC9ByBgB,CAAalB,GAAhCS,EAAZ,EAAOhB,KAAaQ,EAApB,EAAoBA,QAEpB,OACI,eAAC,WAAD,WACI,6BAAKD,IAEDC,GAAW,2CAEf,qBAAKlB,UAAU,YAAf,SAEI0B,EAAOC,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA6BA,GAAZA,EAAIC,aAYzCb,EAAQoB,aAAe,CACfnB,SAAS,kBAIFD,QChCTqB,EAAe,SAAC,GAAa,IAAZvC,EAAW,EAAXA,MAEnB,EAAoCX,mBAAS,CAAC,mBAA9C,mBAAOmD,EAAP,KAAmBC,EAAnB,KAUA,OACI,eAAC,WAAD,WACI,6BAAKzC,IACL,uBACA,cAAC,EAAD,CAAaZ,WAZF,SAACsD,GAIfA,EAAQC,OAAOC,OAAS,GACzBH,GAAe,SAAAI,GAAI,OAAKH,GAAL,mBAAgBG,UAQ/B,6BAEQL,EAAWX,KAAI,SAAAV,GAAQ,OACf,cAAC,EAAD,CAA0BA,SAAUA,GAApBA,YAa5CoB,EAAaD,aAAe,CAExBtC,MAAM,gBAKKuC,QCzCfO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.ec8a4f2a.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({handlerAdd}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    \r\n    const handlerChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (e) =>{\r\n        e.preventDefault();\r\n        handlerAdd(inputValue);\r\n        setInputValue(\"\");\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n          <input\r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange={handlerChange}\r\n          />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    handlerAdd:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n\r\n","import React from 'react'\r\nimport '../styles/GifImage.css'\r\n\r\nconst GifImage = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className = \"card animate__animated animate__fadeInUp\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifImage\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types'\r\n\r\n//const ApiKey = '7rG1ZLqvhCH40j0WRksIgl61CdPzWCKy';\r\n//const URL_RANDOM = \"https://api.giphy.com/v1/gifs/random\";\r\n//const URL_SEARCH = 'https://api.giphy.com/v1/gifs/search';\r\n\r\n\r\n     const GetRequest = async (url,params) => {\r\n        try {\r\n            const response = await axios.get(url,{params});\r\n            return response;\r\n        } catch (err) {\r\n          return err;\r\n        }\r\n    }\r\n\r\n    const PostRequest = async (url,params,data) => {\r\n      try {\r\n          const response = await axios.post(url,{params,data});\r\n          return response;\r\n      } catch (err) {\r\n        return err;\r\n      }\r\n  }\r\n\r\n\r\n  GetRequest.propTypes = {\r\n    url:PropTypes.string.isRequired\r\n  }\r\n\r\n  PostRequest.propTypes = {\r\n    url:PropTypes.string.isRequired\r\n  }\r\n\r\nexport {\r\n  GetRequest,\r\n  PostRequest,\r\n} \r\n","import {useState,useEffect} from 'react'\r\nimport {GetRequest} from '../helpers/Request';\r\n\r\nconst URL_SEARCH = 'https://api.giphy.com/v1/gifs/search';\r\nconst ApiKey = '7rG1ZLqvhCH40j0WRksIgl61CdPzWCKy';\r\n\r\nexport const useAxiosGifs = (category) => {\r\n   const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n   });\r\n\r\n\r\n   useEffect(() =>{\r\n\r\n    \r\n    const params = {\r\n        api_key: ApiKey,\r\n        q:category,\r\n        limit: 10,\r\n        \r\n    };\r\n\r\n    GetRequest(URL_SEARCH,params)\r\n    .then(response => {\r\n          const images = response.data.data.map(img =>{\r\n                return {\r\n                    id : img.id,\r\n                    title : img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n            });\r\n            setState({\r\n                data: images,\r\n                loading: false,\r\n            });\r\n        }).catch(err => console.log(err))\r\n},[category])\r\n\r\n\r\n\r\n   return state;\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Fragment } from 'react'\r\nimport GifImage from './GifImage';\r\nimport '../styles/GifGrid.css'\r\nimport {useAxiosGifs} from '../hooks/useAxiosGifs'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useAxiosGifs(category);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h3>{category}</h3>\r\n            {\r\n                loading && <p>Loading...</p>\r\n            }\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map(img => (\r\n                    <GifImage key = {img.id} {...img} />\r\n                ))    \r\n            }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category:PropTypes.string\r\n}\r\n\r\nGifGrid.defaultProps = {\r\n        category:'Rick and Morty',\r\n}\r\n\r\n\r\nexport default GifGrid\r\n\r\n","import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from './GifGrid'\r\n\r\n\r\n//el componente por defecto se crea tipeando rfce y despues tabulador\r\nconst GifExpertApp = ({title}) => {\r\n\r\n    const [categories, setCategories] = useState([\"Rick and Morty\"])\r\n\r\n    const handlerAdd = (element) => { \r\n        // el uso de && es como un if lambda sin el else\r\n        // (condicion)?(true):(false)\r\n        // (condicion) && (return)\r\n        (element.trim().length > 2) && \r\n        setCategories( cags => [element,...cags]);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            <h2>{title}</h2>\r\n            <hr/>\r\n            <AddCategory handlerAdd= {handlerAdd}/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                            <GifGrid  key= {category} category={category} /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n    title:PropTypes.string,\r\n}\r\n\r\nGifExpertApp.defaultProps = {\r\n\r\n    title:'GifExpertApp',\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.querySelector('#root')\n);\n\n"],"sourceRoot":""}